// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


//adopted from third_party/firebase/dataconnect/emulator/server/api/connector_service.proto
syntax = "proto3";

package google.firebase.dataconnect.v1beta;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/struct.proto";
import "graphql_error.proto";

option java_package = "com.google.firebase.dataconnect.v1beta";
option java_multiple_files = true;
option java_outer_classname = "ConnectorServiceProto";

service ConnectorService {
  // Execute a predefined query in a Connector.
  rpc ExecuteQuery(ExecuteQueryRequest) returns (ExecuteQueryResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=projects/*/locations/*/services/*/connectors/*}:executeQuery"
      body: "*"
      additional_bindings {
        post: "/v1beta/{name=projects/*/locations/*/services/*/connectors/*}:executeQuery"
        body: "*"
      }
    };
  }

  // Execute a predefined mutation in a Connector.
  rpc ExecuteMutation(ExecuteMutationRequest)
      returns (ExecuteMutationResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=projects/*/locations/*/services/*/connectors/*}:executeMutation"
      body: "*"
      additional_bindings {
        post: "/v1beta/{name=projects/*/locations/*/services/*/connectors/*}:executeMutation"
        body: "*"
      }
    };
  }
}

// The ExecuteQuery request to Firebase Data Connect.
message ExecuteQueryRequest {
  // The resource name of the connector to find the predefined query, in
  // the format:
  // ```
  // projects/{project}/locations/{location}/services/{service}/connectors/{connector}
  // ```
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // The name of the GraphQL operation name.
  // Required because all Connector operations must be named.
  // See https://graphql.org/learn/queries/#operation-name.
  // (-- api-linter: core::0122::name-suffix=disabled
  //     aip.dev/not-precedent: Must conform to GraphQL HTTP spec standard. --)
  string operation_name = 2 [(google.api.field_behavior) = REQUIRED];

  // Values for GraphQL variables provided in this request.
  google.protobuf.Struct variables = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The ExecuteMutation request to Firebase Data Connect.
message ExecuteMutationRequest {
  // The resource name of the connector to find the predefined mutation, in
  // the format:
  // ```
  // projects/{project}/locations/{location}/services/{service}/connectors/{connector}
  // ```
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // The name of the GraphQL operation name.
  // Required because all Connector operations must be named.
  // See https://graphql.org/learn/queries/#operation-name.
  // (-- api-linter: core::0122::name-suffix=disabled
  //     aip.dev/not-precedent: Must conform to GraphQL HTTP spec standard. --)
  string operation_name = 2 [(google.api.field_behavior) = REQUIRED];

  // Values for GraphQL variables provided in this request.
  google.protobuf.Struct variables = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The ExecuteQuery response from Firebase Data Connect.
message ExecuteQueryResponse {
  // The result of executing the requested operation.
  google.protobuf.Struct data = 1;
  // Errors of this response.
  repeated GraphqlError errors = 2;
}

// The ExecuteMutation response from Firebase Data Connect.
message ExecuteMutationResponse {
  // The result of executing the requested operation.
  google.protobuf.Struct data = 1;
  // Errors of this response.
  repeated GraphqlError errors = 2;
}
